--------------------------------------------------------------------------
--------------------------------------------------------------------------
----------------------2016-11-23-note-by-cherry.zhang-----------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------

参考例子：https://github.com/CherryZY/Process_Protect_Module.git


将SSDT部分修改为可写属性绕过保护：

(关闭保护:可写,可读)
{
	ULONG	Attr;//空地址

	//0FFFEFFFh =>1111 1111 1111 1110 1111 1111 1111
	//0FFFEFFFh第16位WP为0
	_asm
	{
		cli;
		mov eax, cr0;
		mov Attr, eax;
		and eax, 0FFFEFFFh;
		mov cr0, eax;
	};
	//存储cr0初始状态
	*pOldAttr = Attr;

}

(开启保护:不可写,仅可读)
{
	ULONG	Attr;
	//直接将初始状态赋值给cr0
	_asm
	{
		mov eax, oldAttr;
		mov cr0, eax;
		sti;
	};
}

cli:
关中断
将处理器标志寄存器的中断标志位清零

sti:
开启中断
将处理器标志寄存器的中断标志位置1

cr0:
系统内的控制寄存器之一.
控制寄存器可以控制CPU的一些重要特性.
在286处理器中被称为“机器状态字”
Cr0寄存器直到486的处理器才加入“写保护”(WP)位
WP位控制是否允许处理器向标记为只读属性页写入数据；
	WP = 1 ---> 禁止写
	WP = 0 ---> 可写
(cr0的第16位是WP位)



